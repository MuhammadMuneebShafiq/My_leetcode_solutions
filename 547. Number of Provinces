class Solution:
    def findCircleNum(self, isConnected: List[List[int]]) -> int:
        def dfs(node):
            visited[node] = 1
            for neighbour in adj[node]:
                if visited[neighbour]  == 0:
                    dfs(neighbour)

        from collections import deque
        adj = [[] for _ in range(len(isConnected))]
        for u in range(len(isConnected)):
            for v in range(len(isConnected[0])):
                if isConnected[u][v] == 1:
                    adj[u].append(v)
                    adj[v].append(u)

        visited = [0]*len(adj)
        count = 0
        for r in range(len(adj)):
            if visited[r] == 0:
                count += 1
                dfs(r)

        return (count)

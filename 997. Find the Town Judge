class Solution:
    def findJudge(self, n: int, trust: List[List[int]]) -> int:
        from collections import defaultdict , deque

        graph1 = defaultdict(list)
        graph2 = defaultdict(list)
        visited = [False]*(n+1)

        for r in trust:
            u , v = r
            graph1[u].append(v)
            graph2[v].append(u)

        for r in range(1 , n+1):
            if not graph1[r] and (len(graph2[r]) == n-1):
                return (r)
                break
        return -1
